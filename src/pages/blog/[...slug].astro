---
import { getCollection } from 'astro:content'
import Separator from '../../components/Separator.astro'
import BaseLayout from '../../layouts/base.astro'
import TableOfContents from '../../components/TableOfContents'
import RelatedReading from '../../components/RelatedReading.astro'

export async function getStaticPaths() {
  const blogEntries = await getCollection(
    'blog',
    ({ data }) => data.pubDate < new Date()
  )

  return blogEntries.map((entry) => ({
    params: { slug: entry.slug },
    props: { post: entry },
  }))
}

const { slug } = Astro.params
const { post } = Astro.props
const { title, description, tags, canonicalUrl, ograph } = post.data
const { Content, headings } = await post.render()
const permalink = `https://${import.meta.env.HOST}/blog/${slug}/`
---

<BaseLayout {title} {description} {permalink} {canonicalUrl} {ograph}>
  <article class="wrapper">
    <header style=`background-image:url(${post.data.image})`>
      <h1>{title}</h1>
    </header>
    <Separator />

    <main>
      <section>
        <Content />
      </section>
      <aside>
        <TableOfContents {headings} client:load />
      </aside>
    </main>

    <Separator />
    <RelatedReading {slug} {tags} />
  </article>
</BaseLayout>

<style lang="scss">
  .wrapper {
    @apply pb-12 pt-40;

    header {
      @apply bg-cover bg-no-repeat;
      background-position: center 1rem;

      h1 {
        @apply py-12 sm:py-28 text-center;
        @apply mb-0;
        background-image: linear-gradient(to bottom, rgba(0,0,0,0.2) , rgba(0,0,0,0.6) );
      }
    }

    main {
      @apply flex gap-12;
      @apply pb-20;
      @apply items-start;

      section {
        @apply flex flex-col;
        @apply w-full md:w-4/6;
      }
      aside {
        @apply hidden md:flex md:flex-col;
        @apply md:w-2/6;
        @apply z-0;
        @apply sticky;
        top: 105px;
      }
    }
  }
</style>
